import { useQuery } from '@tanstack/react-query';
import { apiClient } from '@/shared/lib/api/apiClient';

// レスポンスの型定義
interface {{pascalCase name}}Response {
  // レスポンスの型を定義
}

// クエリパラメータの型定義
interface {{pascalCase name}}Params {
  // クエリパラメータの型を定義
}

// キャッシュキー
const {{constantCase name}}_QUERY_KEY = ['{{dashCase feature}}', '{{dashCase name}}'];

/**
 * {{name}} - データを取得するためのカスタムフック
 */
export function {{name}}(params?: {{pascalCase name}}Params) {
  return useQuery({
    queryKey: [...{{constantCase name}}_QUERY_KEY, params],
    queryFn: async () => {
      // APIエンドポイントのパス
      const endpoint = `/api/{{dashCase feature}}/endpoint`;
      
      // クエリパラメータがある場合はURLに追加
      const queryParams = params ? new URLSearchParams(params as any).toString() : '';
      const url = queryParams ? `${endpoint}?${queryParams}` : endpoint;
      
      return apiClient.get<{{pascalCase name}}Response>(url);
    },
  });
}
